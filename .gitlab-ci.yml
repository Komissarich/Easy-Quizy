# stages:
#   - lint
#   - test
#   - build

# lint:
#   stage: lint
#   image: golangci/golangci-lint:latest
#   allow_failure: true
#   script:
#     - cd api_gateway_service 
#     - golangci-lint run
#     - cd ..
#     - cd auth_service
#     - golangci-lint run
#     - cd ..
#     - cd quiz_service
#     - golangci-lint run
#     - cd ..
#     - cd stat_service
#     - golangci-lint run
#     - cd ..

# build:
#   image: golang:1.24.2-alpine3.21
#   stage: build
#   script:
#     - cd auth_service
#     - go build -o auth_service cmd/main.go
#     - cd ..
#     - cd quiz_service
#     - go build -o quiz_service cmd/quiz/main.go
#     - cd ..
#     - cd stat_service
#     - go build -o stat_service cmd/app/main.go
#     - cd ..
     
  
# test:
#   image: golang:1.24.2-alpine3.21
#   stage: test
#   script:
#     - cd auth_service
#     - go test ./... -coverprofile=cover
#     - go tool cover -func cover | grep total
#     - cd ..
#     - cd quiz_service
#     - go test ./... -coverprofile=cover
#     - go tool cover -func cover | grep total
#     - cd ..
#     - cd stat_service
#     - go test ./... -coverprofile=cover
#     - go tool cover -func cover | grep total
#     - cd ..

stages:
  - lint
  - test
  - build

lint:
  stage: lint
  image: golangci/golangci-lint:latest
  allow_failure: true
  script:
    - cd api_gateway_service 
    - golangci-lint run
    - cd ..
    - cd auth_service
    - golangci-lint run
    - cd ..
    - cd quiz_service
    - golangci-lint run
    - cd ..
    - cd stat_service
    - golangci-lint run
    - cd ..

build:
  image: golang:1.24.2-alpine3.21
  stage: build
  script:
    - go build -o bin/auth_service ./auth_service/cmd/main.go
    - go build -o bin/quiz_service ./quiz_service/cmd/quiz/main.go
    - go build -o bin/stat_service ./stat_service/cmd/app/main.go
  artifacts:
    paths:
      - bin/

test:
  stage: test
  image: golang:1.24.2-alpine3.21
  allow_failure: true
  services:
    - name: redis:alpine
      alias: redis
  variables:
    REDIS_HOST: redis
    POSTGRES_HOST: postgres
    POSTGRES_USER: test
    POSTGRES_PASSWORD: test
    POSTGRES_DB: test
  parallel:
    matrix:
      - SERVICE: auth_service
      - SERVICE: quiz_service
      - SERVICE: stat_service
  before_script:
    - apk add --no-cache git gcc musl-dev
  script:
    - cd $SERVICE
    - go test -v ./... -coverprofile=cover -tags=integration
    - go tool cover -func cover | grep total