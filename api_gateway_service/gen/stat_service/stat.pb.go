// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v4.25.6
// source: protos/stat.proto

package stat_service

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListQuizzesOption int32

const (
	ListQuizzesOption_AVG_RATE     ListQuizzesOption = 0
	ListQuizzesOption_NUM_SESSIONS ListQuizzesOption = 1
)

// Enum value maps for ListQuizzesOption.
var (
	ListQuizzesOption_name = map[int32]string{
		0: "AVG_RATE",
		1: "NUM_SESSIONS",
	}
	ListQuizzesOption_value = map[string]int32{
		"AVG_RATE":     0,
		"NUM_SESSIONS": 1,
	}
)

func (x ListQuizzesOption) Enum() *ListQuizzesOption {
	p := new(ListQuizzesOption)
	*p = x
	return p
}

func (x ListQuizzesOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListQuizzesOption) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_stat_proto_enumTypes[0].Descriptor()
}

func (ListQuizzesOption) Type() protoreflect.EnumType {
	return &file_protos_stat_proto_enumTypes[0]
}

func (x ListQuizzesOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListQuizzesOption.Descriptor instead.
func (ListQuizzesOption) EnumDescriptor() ([]byte, []int) {
	return file_protos_stat_proto_rawDescGZIP(), []int{0}
}

type ListPlayersOption int32

const (
	ListPlayersOption_TOTAL_SCORE ListPlayersOption = 0
	ListPlayersOption_BEST_SCORE  ListPlayersOption = 1
	ListPlayersOption_AVG_SCORE   ListPlayersOption = 2
)

// Enum value maps for ListPlayersOption.
var (
	ListPlayersOption_name = map[int32]string{
		0: "TOTAL_SCORE",
		1: "BEST_SCORE",
		2: "AVG_SCORE",
	}
	ListPlayersOption_value = map[string]int32{
		"TOTAL_SCORE": 0,
		"BEST_SCORE":  1,
		"AVG_SCORE":   2,
	}
)

func (x ListPlayersOption) Enum() *ListPlayersOption {
	p := new(ListPlayersOption)
	*p = x
	return p
}

func (x ListPlayersOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListPlayersOption) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_stat_proto_enumTypes[1].Descriptor()
}

func (ListPlayersOption) Type() protoreflect.EnumType {
	return &file_protos_stat_proto_enumTypes[1]
}

func (x ListPlayersOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListPlayersOption.Descriptor instead.
func (ListPlayersOption) EnumDescriptor() ([]byte, []int) {
	return file_protos_stat_proto_rawDescGZIP(), []int{1}
}

type ListAuthorsOption int32

const (
	ListAuthorsOption_NUM_QUIZZES    ListAuthorsOption = 0
	ListAuthorsOption_AVG_QUIZ_RATE  ListAuthorsOption = 1
	ListAuthorsOption_BEST_QUIZ_RATE ListAuthorsOption = 2
)

// Enum value maps for ListAuthorsOption.
var (
	ListAuthorsOption_name = map[int32]string{
		0: "NUM_QUIZZES",
		1: "AVG_QUIZ_RATE",
		2: "BEST_QUIZ_RATE",
	}
	ListAuthorsOption_value = map[string]int32{
		"NUM_QUIZZES":    0,
		"AVG_QUIZ_RATE":  1,
		"BEST_QUIZ_RATE": 2,
	}
)

func (x ListAuthorsOption) Enum() *ListAuthorsOption {
	p := new(ListAuthorsOption)
	*p = x
	return p
}

func (x ListAuthorsOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAuthorsOption) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_stat_proto_enumTypes[2].Descriptor()
}

func (ListAuthorsOption) Type() protoreflect.EnumType {
	return &file_protos_stat_proto_enumTypes[2]
}

func (x ListAuthorsOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAuthorsOption.Descriptor instead.
func (ListAuthorsOption) EnumDescriptor() ([]byte, []int) {
	return file_protos_stat_proto_rawDescGZIP(), []int{2}
}

// Sessions
type UpdateStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QuizId        string                 `protobuf:"bytes,1,opt,name=quiz_id,json=quizId,proto3" json:"quiz_id,omitempty"`
	AuthorId      string                 `protobuf:"bytes,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	PlayersScore  map[string]float32     `protobuf:"bytes,3,rep,name=players_score,json=playersScore,proto3" json:"players_score,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	QuizRate      float32                `protobuf:"fixed32,4,opt,name=quiz_rate,json=quizRate,proto3" json:"quiz_rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateStatsRequest) Reset() {
	*x = UpdateStatsRequest{}
	mi := &file_protos_stat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatsRequest) ProtoMessage() {}

func (x *UpdateStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_stat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatsRequest.ProtoReflect.Descriptor instead.
func (*UpdateStatsRequest) Descriptor() ([]byte, []int) {
	return file_protos_stat_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateStatsRequest) GetQuizId() string {
	if x != nil {
		return x.QuizId
	}
	return ""
}

func (x *UpdateStatsRequest) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *UpdateStatsRequest) GetPlayersScore() map[string]float32 {
	if x != nil {
		return x.PlayersScore
	}
	return nil
}

func (x *UpdateStatsRequest) GetQuizRate() float32 {
	if x != nil {
		return x.QuizRate
	}
	return 0
}

type UpdateStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateStatsResponse) Reset() {
	*x = UpdateStatsResponse{}
	mi := &file_protos_stat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatsResponse) ProtoMessage() {}

func (x *UpdateStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_stat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatsResponse.ProtoReflect.Descriptor instead.
func (*UpdateStatsResponse) Descriptor() ([]byte, []int) {
	return file_protos_stat_proto_rawDescGZIP(), []int{1}
}

type QuizStat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QuizId        string                 `protobuf:"bytes,1,opt,name=quiz_id,json=quizId,proto3" json:"quiz_id,omitempty"`
	AuthorId      string                 `protobuf:"bytes,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	NumSessions   int32                  `protobuf:"varint,3,opt,name=num_sessions,json=numSessions,proto3" json:"num_sessions,omitempty"`
	AvgRate       float32                `protobuf:"fixed32,4,opt,name=avg_rate,json=avgRate,proto3" json:"avg_rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuizStat) Reset() {
	*x = QuizStat{}
	mi := &file_protos_stat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuizStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuizStat) ProtoMessage() {}

func (x *QuizStat) ProtoReflect() protoreflect.Message {
	mi := &file_protos_stat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuizStat.ProtoReflect.Descriptor instead.
func (*QuizStat) Descriptor() ([]byte, []int) {
	return file_protos_stat_proto_rawDescGZIP(), []int{2}
}

func (x *QuizStat) GetQuizId() string {
	if x != nil {
		return x.QuizId
	}
	return ""
}

func (x *QuizStat) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *QuizStat) GetNumSessions() int32 {
	if x != nil {
		return x.NumSessions
	}
	return 0
}

func (x *QuizStat) GetAvgRate() float32 {
	if x != nil {
		return x.AvgRate
	}
	return 0
}

type GetQuizStatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QuizId        string                 `protobuf:"bytes,1,opt,name=quiz_id,json=quizId,proto3" json:"quiz_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQuizStatRequest) Reset() {
	*x = GetQuizStatRequest{}
	mi := &file_protos_stat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuizStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuizStatRequest) ProtoMessage() {}

func (x *GetQuizStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_stat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuizStatRequest.ProtoReflect.Descriptor instead.
func (*GetQuizStatRequest) Descriptor() ([]byte, []int) {
	return file_protos_stat_proto_rawDescGZIP(), []int{3}
}

func (x *GetQuizStatRequest) GetQuizId() string {
	if x != nil {
		return x.QuizId
	}
	return ""
}

type GetQuizStatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Quiz          *QuizStat              `protobuf:"bytes,1,opt,name=quiz,proto3" json:"quiz,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQuizStatResponse) Reset() {
	*x = GetQuizStatResponse{}
	mi := &file_protos_stat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuizStatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuizStatResponse) ProtoMessage() {}

func (x *GetQuizStatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_stat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuizStatResponse.ProtoReflect.Descriptor instead.
func (*GetQuizStatResponse) Descriptor() ([]byte, []int) {
	return file_protos_stat_proto_rawDescGZIP(), []int{4}
}

func (x *GetQuizStatResponse) GetQuiz() *QuizStat {
	if x != nil {
		return x.Quiz
	}
	return nil
}

type ListQuizzesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Option        ListQuizzesOption      `protobuf:"varint,1,opt,name=option,proto3,enum=api.ListQuizzesOption" json:"option,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListQuizzesRequest) Reset() {
	*x = ListQuizzesRequest{}
	mi := &file_protos_stat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQuizzesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuizzesRequest) ProtoMessage() {}

func (x *ListQuizzesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_stat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuizzesRequest.ProtoReflect.Descriptor instead.
func (*ListQuizzesRequest) Descriptor() ([]byte, []int) {
	return file_protos_stat_proto_rawDescGZIP(), []int{5}
}

func (x *ListQuizzesRequest) GetOption() ListQuizzesOption {
	if x != nil {
		return x.Option
	}
	return ListQuizzesOption_AVG_RATE
}

type ListQuizzesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Quizzes       []*QuizStat            `protobuf:"bytes,1,rep,name=quizzes,proto3" json:"quizzes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListQuizzesResponse) Reset() {
	*x = ListQuizzesResponse{}
	mi := &file_protos_stat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQuizzesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuizzesResponse) ProtoMessage() {}

func (x *ListQuizzesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_stat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuizzesResponse.ProtoReflect.Descriptor instead.
func (*ListQuizzesResponse) Descriptor() ([]byte, []int) {
	return file_protos_stat_proto_rawDescGZIP(), []int{6}
}

func (x *ListQuizzesResponse) GetQuizzes() []*QuizStat {
	if x != nil {
		return x.Quizzes
	}
	return nil
}

type PlayerStat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TotalScore    float32                `protobuf:"fixed32,2,opt,name=total_score,json=totalScore,proto3" json:"total_score,omitempty"`
	BestScore     float32                `protobuf:"fixed32,3,opt,name=best_score,json=bestScore,proto3" json:"best_score,omitempty"`
	AvgScore      float32                `protobuf:"fixed32,4,opt,name=avg_score,json=avgScore,proto3" json:"avg_score,omitempty"`
	NumSessions   int32                  `protobuf:"varint,5,opt,name=num_sessions,json=numSessions,proto3" json:"num_sessions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerStat) Reset() {
	*x = PlayerStat{}
	mi := &file_protos_stat_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStat) ProtoMessage() {}

func (x *PlayerStat) ProtoReflect() protoreflect.Message {
	mi := &file_protos_stat_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStat.ProtoReflect.Descriptor instead.
func (*PlayerStat) Descriptor() ([]byte, []int) {
	return file_protos_stat_proto_rawDescGZIP(), []int{7}
}

func (x *PlayerStat) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PlayerStat) GetTotalScore() float32 {
	if x != nil {
		return x.TotalScore
	}
	return 0
}

func (x *PlayerStat) GetBestScore() float32 {
	if x != nil {
		return x.BestScore
	}
	return 0
}

func (x *PlayerStat) GetAvgScore() float32 {
	if x != nil {
		return x.AvgScore
	}
	return 0
}

func (x *PlayerStat) GetNumSessions() int32 {
	if x != nil {
		return x.NumSessions
	}
	return 0
}

type GetPlayerStatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayerStatRequest) Reset() {
	*x = GetPlayerStatRequest{}
	mi := &file_protos_stat_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerStatRequest) ProtoMessage() {}

func (x *GetPlayerStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_stat_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerStatRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerStatRequest) Descriptor() ([]byte, []int) {
	return file_protos_stat_proto_rawDescGZIP(), []int{8}
}

func (x *GetPlayerStatRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetPlayerStatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Player        *PlayerStat            `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayerStatResponse) Reset() {
	*x = GetPlayerStatResponse{}
	mi := &file_protos_stat_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerStatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerStatResponse) ProtoMessage() {}

func (x *GetPlayerStatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_stat_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerStatResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerStatResponse) Descriptor() ([]byte, []int) {
	return file_protos_stat_proto_rawDescGZIP(), []int{9}
}

func (x *GetPlayerStatResponse) GetPlayer() *PlayerStat {
	if x != nil {
		return x.Player
	}
	return nil
}

type ListPlayersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Option        ListPlayersOption      `protobuf:"varint,1,opt,name=option,proto3,enum=api.ListPlayersOption" json:"option,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPlayersRequest) Reset() {
	*x = ListPlayersRequest{}
	mi := &file_protos_stat_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPlayersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlayersRequest) ProtoMessage() {}

func (x *ListPlayersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_stat_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlayersRequest.ProtoReflect.Descriptor instead.
func (*ListPlayersRequest) Descriptor() ([]byte, []int) {
	return file_protos_stat_proto_rawDescGZIP(), []int{10}
}

func (x *ListPlayersRequest) GetOption() ListPlayersOption {
	if x != nil {
		return x.Option
	}
	return ListPlayersOption_TOTAL_SCORE
}

type ListPlayersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Players       []*PlayerStat          `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPlayersResponse) Reset() {
	*x = ListPlayersResponse{}
	mi := &file_protos_stat_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPlayersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlayersResponse) ProtoMessage() {}

func (x *ListPlayersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_stat_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlayersResponse.ProtoReflect.Descriptor instead.
func (*ListPlayersResponse) Descriptor() ([]byte, []int) {
	return file_protos_stat_proto_rawDescGZIP(), []int{11}
}

func (x *ListPlayersResponse) GetPlayers() []*PlayerStat {
	if x != nil {
		return x.Players
	}
	return nil
}

type AuthorStat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NumQuizzes    int32                  `protobuf:"varint,2,opt,name=num_quizzes,json=numQuizzes,proto3" json:"num_quizzes,omitempty"`
	AvgQuizRate   float32                `protobuf:"fixed32,3,opt,name=avg_quiz_rate,json=avgQuizRate,proto3" json:"avg_quiz_rate,omitempty"`
	BestQuizRate  float32                `protobuf:"fixed32,4,opt,name=best_quiz_rate,json=bestQuizRate,proto3" json:"best_quiz_rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorStat) Reset() {
	*x = AuthorStat{}
	mi := &file_protos_stat_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorStat) ProtoMessage() {}

func (x *AuthorStat) ProtoReflect() protoreflect.Message {
	mi := &file_protos_stat_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorStat.ProtoReflect.Descriptor instead.
func (*AuthorStat) Descriptor() ([]byte, []int) {
	return file_protos_stat_proto_rawDescGZIP(), []int{12}
}

func (x *AuthorStat) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AuthorStat) GetNumQuizzes() int32 {
	if x != nil {
		return x.NumQuizzes
	}
	return 0
}

func (x *AuthorStat) GetAvgQuizRate() float32 {
	if x != nil {
		return x.AvgQuizRate
	}
	return 0
}

func (x *AuthorStat) GetBestQuizRate() float32 {
	if x != nil {
		return x.BestQuizRate
	}
	return 0
}

type GetAuthorStatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuthorStatRequest) Reset() {
	*x = GetAuthorStatRequest{}
	mi := &file_protos_stat_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuthorStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthorStatRequest) ProtoMessage() {}

func (x *GetAuthorStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_stat_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthorStatRequest.ProtoReflect.Descriptor instead.
func (*GetAuthorStatRequest) Descriptor() ([]byte, []int) {
	return file_protos_stat_proto_rawDescGZIP(), []int{13}
}

func (x *GetAuthorStatRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetAuthorStatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Author        *AuthorStat            `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuthorStatResponse) Reset() {
	*x = GetAuthorStatResponse{}
	mi := &file_protos_stat_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuthorStatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthorStatResponse) ProtoMessage() {}

func (x *GetAuthorStatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_stat_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthorStatResponse.ProtoReflect.Descriptor instead.
func (*GetAuthorStatResponse) Descriptor() ([]byte, []int) {
	return file_protos_stat_proto_rawDescGZIP(), []int{14}
}

func (x *GetAuthorStatResponse) GetAuthor() *AuthorStat {
	if x != nil {
		return x.Author
	}
	return nil
}

type ListAuthorsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Option        ListAuthorsOption      `protobuf:"varint,1,opt,name=option,proto3,enum=api.ListAuthorsOption" json:"option,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAuthorsRequest) Reset() {
	*x = ListAuthorsRequest{}
	mi := &file_protos_stat_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAuthorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuthorsRequest) ProtoMessage() {}

func (x *ListAuthorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_stat_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuthorsRequest.ProtoReflect.Descriptor instead.
func (*ListAuthorsRequest) Descriptor() ([]byte, []int) {
	return file_protos_stat_proto_rawDescGZIP(), []int{15}
}

func (x *ListAuthorsRequest) GetOption() ListAuthorsOption {
	if x != nil {
		return x.Option
	}
	return ListAuthorsOption_NUM_QUIZZES
}

type ListAuthorsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Authors       []*AuthorStat          `protobuf:"bytes,1,rep,name=authors,proto3" json:"authors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAuthorsResponse) Reset() {
	*x = ListAuthorsResponse{}
	mi := &file_protos_stat_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAuthorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuthorsResponse) ProtoMessage() {}

func (x *ListAuthorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_stat_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuthorsResponse.ProtoReflect.Descriptor instead.
func (*ListAuthorsResponse) Descriptor() ([]byte, []int) {
	return file_protos_stat_proto_rawDescGZIP(), []int{16}
}

func (x *ListAuthorsResponse) GetAuthors() []*AuthorStat {
	if x != nil {
		return x.Authors
	}
	return nil
}

var File_protos_stat_proto protoreflect.FileDescriptor

var file_protos_stat_proto_rawDesc = string([]byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf8, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x71, 0x75, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x71, 0x75, 0x69, 0x7a, 0x52, 0x61, 0x74, 0x65,
	0x1a, 0x3f, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7e, 0x0a, 0x08, 0x51, 0x75, 0x69, 0x7a,
	0x53, 0x74, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71, 0x75, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x75,
	0x6d, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x76, 0x67, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x61, 0x76, 0x67, 0x52, 0x61, 0x74, 0x65, 0x22, 0x2d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x69, 0x7a, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x71, 0x75, 0x69, 0x7a, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x51, 0x75,
	0x69, 0x7a, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21,
	0x0a, 0x04, 0x71, 0x75, 0x69, 0x7a, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x74, 0x61, 0x74, 0x52, 0x04, 0x71, 0x75, 0x69,
	0x7a, 0x22, 0x44, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x65, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3e, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x51,
	0x75, 0x69, 0x7a, 0x7a, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27,
	0x0a, 0x07, 0x71, 0x75, 0x69, 0x7a, 0x7a, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x74, 0x61, 0x74, 0x52, 0x07,
	0x71, 0x75, 0x69, 0x7a, 0x7a, 0x65, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x62, 0x65, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x76, 0x67, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x61, 0x76, 0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x6e, 0x75, 0x6d, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x2f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x40, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x22, 0x44, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x29, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x0a, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x71, 0x75, 0x69, 0x7a, 0x7a, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x51, 0x75, 0x69, 0x7a,
	0x7a, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x76, 0x67, 0x5f, 0x71, 0x75, 0x69, 0x7a, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x61, 0x76, 0x67, 0x51,
	0x75, 0x69, 0x7a, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x65, 0x73, 0x74, 0x5f,
	0x71, 0x75, 0x69, 0x7a, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0c, 0x62, 0x65, 0x73, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x61, 0x74, 0x65, 0x22, 0x2f, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x40,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x22, 0x44, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a,
	0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x2a, 0x33, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x51, 0x75, 0x69, 0x7a, 0x7a, 0x65, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a,
	0x08, 0x41, 0x56, 0x47, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4e,
	0x55, 0x4d, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x01, 0x2a, 0x43, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x4f, 0x54, 0x41, 0x4c, 0x5f, 0x53, 0x43, 0x4f, 0x52,
	0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x45, 0x53, 0x54, 0x5f, 0x53, 0x43, 0x4f, 0x52,
	0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x56, 0x47, 0x5f, 0x53, 0x43, 0x4f, 0x52, 0x45,
	0x10, 0x02, 0x2a, 0x4b, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x55, 0x4d, 0x5f, 0x51,
	0x55, 0x49, 0x5a, 0x5a, 0x45, 0x53, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x56, 0x47, 0x5f,
	0x51, 0x55, 0x49, 0x5a, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x42,
	0x45, 0x53, 0x54, 0x5f, 0x51, 0x55, 0x49, 0x5a, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x10, 0x02, 0x32,
	0xc7, 0x05, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x5d,
	0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x17, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x62, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x74, 0x61, 0x74, 0x12, 0x17, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x69, 0x7a, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x2f, 0x71, 0x75, 0x69, 0x7a, 0x2f, 0x7b, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x69, 0x64,
	0x7d, 0x12, 0x64, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x65, 0x73,
	0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x7a,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x71, 0x75, 0x69, 0x7a, 0x7a, 0x65, 0x73, 0x2f, 0x7b,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x12, 0x6a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0x5b, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x12, 0x6a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c,
	0x12, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x5b, 0x0a, 0x0b,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x12, 0x17, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x42, 0x14, 0x5a, 0x12, 0x2e, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_protos_stat_proto_rawDescOnce sync.Once
	file_protos_stat_proto_rawDescData []byte
)

func file_protos_stat_proto_rawDescGZIP() []byte {
	file_protos_stat_proto_rawDescOnce.Do(func() {
		file_protos_stat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protos_stat_proto_rawDesc), len(file_protos_stat_proto_rawDesc)))
	})
	return file_protos_stat_proto_rawDescData
}

var file_protos_stat_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_protos_stat_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_protos_stat_proto_goTypes = []any{
	(ListQuizzesOption)(0),        // 0: api.ListQuizzesOption
	(ListPlayersOption)(0),        // 1: api.ListPlayersOption
	(ListAuthorsOption)(0),        // 2: api.ListAuthorsOption
	(*UpdateStatsRequest)(nil),    // 3: api.UpdateStatsRequest
	(*UpdateStatsResponse)(nil),   // 4: api.UpdateStatsResponse
	(*QuizStat)(nil),              // 5: api.QuizStat
	(*GetQuizStatRequest)(nil),    // 6: api.GetQuizStatRequest
	(*GetQuizStatResponse)(nil),   // 7: api.GetQuizStatResponse
	(*ListQuizzesRequest)(nil),    // 8: api.ListQuizzesRequest
	(*ListQuizzesResponse)(nil),   // 9: api.ListQuizzesResponse
	(*PlayerStat)(nil),            // 10: api.PlayerStat
	(*GetPlayerStatRequest)(nil),  // 11: api.GetPlayerStatRequest
	(*GetPlayerStatResponse)(nil), // 12: api.GetPlayerStatResponse
	(*ListPlayersRequest)(nil),    // 13: api.ListPlayersRequest
	(*ListPlayersResponse)(nil),   // 14: api.ListPlayersResponse
	(*AuthorStat)(nil),            // 15: api.AuthorStat
	(*GetAuthorStatRequest)(nil),  // 16: api.GetAuthorStatRequest
	(*GetAuthorStatResponse)(nil), // 17: api.GetAuthorStatResponse
	(*ListAuthorsRequest)(nil),    // 18: api.ListAuthorsRequest
	(*ListAuthorsResponse)(nil),   // 19: api.ListAuthorsResponse
	nil,                           // 20: api.UpdateStatsRequest.PlayersScoreEntry
}
var file_protos_stat_proto_depIdxs = []int32{
	20, // 0: api.UpdateStatsRequest.players_score:type_name -> api.UpdateStatsRequest.PlayersScoreEntry
	5,  // 1: api.GetQuizStatResponse.quiz:type_name -> api.QuizStat
	0,  // 2: api.ListQuizzesRequest.option:type_name -> api.ListQuizzesOption
	5,  // 3: api.ListQuizzesResponse.quizzes:type_name -> api.QuizStat
	10, // 4: api.GetPlayerStatResponse.player:type_name -> api.PlayerStat
	1,  // 5: api.ListPlayersRequest.option:type_name -> api.ListPlayersOption
	10, // 6: api.ListPlayersResponse.players:type_name -> api.PlayerStat
	15, // 7: api.GetAuthorStatResponse.author:type_name -> api.AuthorStat
	2,  // 8: api.ListAuthorsRequest.option:type_name -> api.ListAuthorsOption
	15, // 9: api.ListAuthorsResponse.authors:type_name -> api.AuthorStat
	3,  // 10: api.Statistics.UpdateStats:input_type -> api.UpdateStatsRequest
	6,  // 11: api.Statistics.GetQuizStat:input_type -> api.GetQuizStatRequest
	8,  // 12: api.Statistics.ListQuizzes:input_type -> api.ListQuizzesRequest
	11, // 13: api.Statistics.GetPlayerStat:input_type -> api.GetPlayerStatRequest
	13, // 14: api.Statistics.ListPlayers:input_type -> api.ListPlayersRequest
	16, // 15: api.Statistics.GetAuthorStat:input_type -> api.GetAuthorStatRequest
	18, // 16: api.Statistics.ListAuthors:input_type -> api.ListAuthorsRequest
	4,  // 17: api.Statistics.UpdateStats:output_type -> api.UpdateStatsResponse
	7,  // 18: api.Statistics.GetQuizStat:output_type -> api.GetQuizStatResponse
	9,  // 19: api.Statistics.ListQuizzes:output_type -> api.ListQuizzesResponse
	12, // 20: api.Statistics.GetPlayerStat:output_type -> api.GetPlayerStatResponse
	14, // 21: api.Statistics.ListPlayers:output_type -> api.ListPlayersResponse
	17, // 22: api.Statistics.GetAuthorStat:output_type -> api.GetAuthorStatResponse
	19, // 23: api.Statistics.ListAuthors:output_type -> api.ListAuthorsResponse
	17, // [17:24] is the sub-list for method output_type
	10, // [10:17] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_protos_stat_proto_init() }
func file_protos_stat_proto_init() {
	if File_protos_stat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protos_stat_proto_rawDesc), len(file_protos_stat_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_stat_proto_goTypes,
		DependencyIndexes: file_protos_stat_proto_depIdxs,
		EnumInfos:         file_protos_stat_proto_enumTypes,
		MessageInfos:      file_protos_stat_proto_msgTypes,
	}.Build()
	File_protos_stat_proto = out.File
	file_protos_stat_proto_goTypes = nil
	file_protos_stat_proto_depIdxs = nil
}
